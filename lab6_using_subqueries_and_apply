--C11 Retrieve products whose list price is higher than the average unit price
SELECT
ProductID,
Name,
ListPrice
FROM
SalesLT.Product
WHERE
ListPrice > (SELECT AVG(UnitPrice) FROM SalesLT.SalesOrderDetail)

--C12 Retrieve Products with a list price of $100 or more that have been sold for less than $100
SELECT
ProductID,
Name,
ListPrice
FROM
SalesLT.Product
WHERE
ListPrice >= 100 AND
ProductID IN (SELECT ProductID FROM SalesLT.SalesOrderDetail WHERE UnitPrice < 100) 

--C13 Retrieve the cost, list price, and average selling price for each product
SELECT
p.ProductID,
p.Name,
p.StandardCost,
p.ListPrice,
(SELECT AVG(od.UnitPrice) FROM SalesLT.SalesOrderDetail od WHERE od.ProductID = p.ProductID) AS AvgUnitPrice
FROM
SalesLT.Product p

--C14 Retrieve products that have an average selling price that is lower than the cost
SELECT
p.ProductID,
p.Name,
p.StandardCost,
p.ListPrice,
(SELECT AVG(od.UnitPrice) FROM SalesLT.SalesOrderDetail od WHERE od.ProductID = p.ProductID) AS AvgUnitPrice
FROM
SalesLT.Product p
WHERE
p.StandardCost > (SELECT AVG(od.UnitPrice) FROM SalesLT.SalesOrderDetail od WHERE od.ProductID = p.ProductID)

--C21 Retrieve customer information for all sales orders
SELECT
oh.SalesOrderID,
oh.CustomerID,
ci.FirstName,
ci.LastName,
oh.TotalDue
FROM
SalesLT.SalesOrderHeader oh
CROSS APPLY
dbo.ufnGetCustomerInformation(oh.CustomerID) ci

--C22 Retrieve customer address information
SELECT
ca.CustomerID,
ci.FirstName,
ci.LastName,
a.AddressLine1,
a.City
FROM
SalesLT.CustomerAddress ca
INNER JOIN
SalesLT.Address a
ON ca.AddressID = a.AddressID
CROSS APPLY
dbo.ufnGetCustomerInformation(ca.CustomerID) ci
